<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.school.business.dao.train.TrainActivityMapper">
  <resultMap id="BaseResultMap" type="com.zl.school.business.entity.train.TrainActivity">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="eid" jdbcType="VARCHAR" property="eid" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="train_id" jdbcType="VARCHAR" property="trainId" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, eid, user_id, train_id, task_id, status, created_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_train_activity
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_train_activity
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zl.school.business.entity.train.TrainActivity">
    insert into t_train_activity (id, eid, user_id, 
      train_id, task_id, status, 
      created_time)
    values (#{id,jdbcType=VARCHAR}, #{eid,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{trainId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createdTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zl.school.business.entity.train.TrainActivity">
    insert into t_train_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="eid != null">
        eid,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="trainId != null">
        train_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="eid != null">
        #{eid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="trainId != null">
        #{trainId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zl.school.business.entity.train.TrainActivity">
    update t_train_activity
    <set>
      <if test="eid != null">
        eid = #{eid,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="trainId != null">
        train_id = #{trainId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zl.school.business.entity.train.TrainActivity">
    update t_train_activity
    set eid = #{eid,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      train_id = #{trainId,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>