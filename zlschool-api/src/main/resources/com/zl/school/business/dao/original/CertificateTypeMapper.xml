<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.school.business.dao.certificate.CertificateTypeMapper">
  <resultMap id="BaseResultMap" type="com.zl.school.business.entity.certificate.CertificateType">
    <id column="eid" jdbcType="VARCHAR" property="eid" />
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
  </resultMap>
  <sql id="Base_Column_List">
    eid, id, name, state, integral, created_time, create_user, updated_time, update_user, 
    memo
  </sql>
  <select id="selectByKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_certificate_type
    where eid = #{param1}
    and id = #{param2}
  </select>
  <delete id="deleteByKey" parameterType="java.lang.String">
    delete from t_certificate_type
    where  eid = #{param1}
    and id = #{param2}
  </delete>
  <insert id="insert" parameterType="com.zl.school.business.entity.certificate.CertificateType">
    insert into t_certificate_type (eid, id, name, 
      state, integral, created_time, 
      create_user, updated_time, update_user, 
      memo)
    values (#{eid,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{integral,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zl.school.business.entity.certificate.CertificateType">
    insert into t_certificate_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        eid,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        #{eid,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zl.school.business.entity.certificate.CertificateType">
    update t_certificate_type
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where eid = #{eid,jdbcType=VARCHAR}
    and id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zl.school.business.entity.certificate.CertificateType">
    update t_certificate_type
    set name = #{name,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR}
    where eid = #{eid,jdbcType=VARCHAR}
      and id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>