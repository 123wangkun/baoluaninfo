<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.school.business.dao.train.TrainFileMapper">
  <resultMap id="BaseResultMap" type="com.zl.school.business.entity.train.TrainFile">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="eid" jdbcType="VARCHAR" property="eid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="position" jdbcType="INTEGER" property="position" />
    <result column="train_id" jdbcType="VARCHAR" property="trainId" />
    <result column="file_type" jdbcType="INTEGER" property="fileType" />
    <result column="file_src" jdbcType="VARCHAR" property="fileSrc" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, eid, name, position, train_id, file_type, file_src, file_size, created_time, 
    create_user, updated_time, update_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_train_file
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_train_file
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zl.school.business.entity.train.TrainFile">
    insert into t_train_file (id, eid, name, 
      position, train_id, file_type, 
      file_src, file_size, created_time, 
      create_user, updated_time, update_user
      )
    values (#{id,jdbcType=VARCHAR}, #{eid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{position,jdbcType=INTEGER}, #{trainId,jdbcType=VARCHAR}, #{fileType,jdbcType=INTEGER}, 
      #{fileSrc,jdbcType=VARCHAR}, #{fileSize,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zl.school.business.entity.train.TrainFile">
    insert into t_train_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="eid != null">
        eid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="trainId != null">
        train_id,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="fileSrc != null">
        file_src,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="eid != null">
        #{eid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=INTEGER},
      </if>
      <if test="trainId != null">
        #{trainId,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=INTEGER},
      </if>
      <if test="fileSrc != null">
        #{fileSrc,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zl.school.business.entity.train.TrainFile">
    update t_train_file
    <set>
      <if test="eid != null">
        eid = #{eid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=INTEGER},
      </if>
      <if test="trainId != null">
        train_id = #{trainId,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=INTEGER},
      </if>
      <if test="fileSrc != null">
        file_src = #{fileSrc,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zl.school.business.entity.train.TrainFile">
    update t_train_file
    set eid = #{eid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      position = #{position,jdbcType=INTEGER},
      train_id = #{trainId,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=INTEGER},
      file_src = #{fileSrc,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>